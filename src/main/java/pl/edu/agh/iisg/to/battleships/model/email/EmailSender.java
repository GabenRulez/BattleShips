package pl.edu.agh.iisg.to.battleships.model.email;


import pl.edu.agh.iisg.to.battleships.Main;
import pl.edu.agh.iisg.to.battleships.model.EasyConfigParser;

import java.nio.ByteBuffer;
import java.nio.charset.StandardCharsets;
import java.util.*;
import javax.mail.*;
import javax.mail.internet.*;

public class EmailSender {

    static private final String emailConfigPathResource = "/emailConfig";

    static EasyConfigParser parser = new EasyConfigParser( Main.class.getResource(emailConfigPathResource).getPath().replace("%20", " ") );
    // .replace() jest tu po to, by program działał, gdy w ścieżce do pliku znajdą się spacje

    public EmailSender(){
        sendEmail("wojtex1221@gmail.com", "BattleShips App Notification", createTemplateEmail("zostałeś pokonany przez pokojówkę", "Paweł"));
    }

    public void sendEmail(String recipient_address, String subject, String data){
        System.out.println("Sending an email to '" + recipient_address + "'.");
        Properties session_properties = System.getProperties();

        String smtp_host = parser.getFromKey("smtp_server");
        String sender_address = parser.getFromKey("email");
        String sender_password = parser.getFromKey("password");
        String smtp_port = parser.getFromKey("smtp_port");

        session_properties.put("mail.smtp.host", smtp_host);
        session_properties.put("mail.smtp.user", sender_address);
        session_properties.put("mail.smtp.password", sender_password);
        session_properties.put("mail.smtp.port", smtp_port);
        session_properties.put("mail.smtp.auth", "true");
        session_properties.put("mail.imap.ssl.enable", "true");

        try {
            Session session = Session.getDefaultInstance(session_properties);
            MimeMessage message = new MimeMessage(session);

            Transport transport = session.getTransport("smtp");
            transport.close();
            transport.connect(smtp_host, sender_address, sender_password);

            message.setFrom(new InternetAddress(sender_address));
            message.addRecipient(Message.RecipientType.TO, new InternetAddress(recipient_address));
            message.setSubject(subject);
            message.setContent(data, "text/html; charset=UTF-8");

            transport.sendMessage(message, message.getAllRecipients());
            transport.close();
        } catch (MessagingException | IllegalStateException e) {
            e.printStackTrace();
        }
    }

    public String createTemplateEmail(String content, String username){
        String temp = "<!DOCTYPE html><html lang='en' id='html'><head> <meta charset='UTF-8'> <title>BattleShips</title> <style>:root{--size: max(2vh, 12px); --sizex2: max(4vh, 24px); --sizex32: max(3vh, 18px); --sizex12: max(1vh, 6px); --sizex3: max(6vh, 36px); --black: #333; --white: #CCC;}*{box-sizing: border-box !important; margin: 0 !important; padding: 0 !important; align-items: center !important; justify-content: center !important; font-size: var(--size) !important; line-height: var(--size) !important;}body, #body{height: 100vh !important; background: var(--white) !important;}#workspace{width: 100% !important; min-height: 100% !important; display: flex !important; flex-direction: column !important; justify-content: space-between !important;}#workspace > header, footer{background: var(--black) !important; width: 100% !important; color: var(--white) !important; display: flex !important; padding: var(--sizex2) !important; font-size: var(--sizex2) !important; line-height: var(--sizex2) !important; flex-direction: column !important; align-items: center !important;}footer{font-size: calc(var(--size)) !important;}#workspace > #content{width: 100% !important; min-height: min-content !important; background: var(--white) !important; color: var(--black) !important; display: flex !important; z-index: -2 !important; font-size: var(--sizex32) !important; line-height: var(--sizex32) !important; flex-direction: column !important;}p,a{font-size: inherit !important; line-height: inherit !important; text-align: center !important; color: inherit !important; text-decoration-style: initial !important;}.smallSubtitle{font-size: var(--sizex12) !important; line-height: var(--sizex12) !important;}#emailContentRecipient{font-size: var(--sizex3) !important; line-height: var(--sizex3) !important; margin-bottom: var(--size) !important; font-weight: bold !important;}</style></head><body id='body'> <div id='workspace'> <header> Battleships App </header> <div id='content'> <p id='emailContentRecipient'> Hey "+username+" </p><p id='emailContent'> " + content + " </p></div><footer> <p> It's a mail generated by Battleships App, written for Object Based Programming course at Akademia Górniczo Hutnicza w Krakowie. </p><p> Creators: <a target='_blank' href='https://github.com/def-au1t'>Jacek Nitychoruk</a>, <a target='_blank' href='https://github.com/GabenRulez'>Wojciech Kosztyła</a>, <a target='_blank' href=''>Marcin Kozubek</a>, <a target='_blank' href='https://github.com/pawek001'>Paweł Kiełbasa</a>. </p><p class='smallSubtitle'> Design: Wojciech Kosztyła </p></footer> </div></body></html>";
        ByteBuffer buffer = StandardCharsets.UTF_8.encode(temp);
        return StandardCharsets.UTF_8.decode(buffer).toString();
    }



}
